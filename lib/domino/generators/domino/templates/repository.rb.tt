# Repository for <%= class_name %> model.
#
# Provides abstracted access to ActiveRecord persistence.
#
# @example
#   repo = <%= class_name %>Repository.new
#   repo.find_by_id(1)
#
class <%= class_name %>Repository < BaseRepository
  # @param id [Integer]
  # @return [<%= class_name %>, nil]
  def find_by_id(id)
    <%= class_name %>.find_by(id: id)
  end

  # @return [Array<<%= class_name %>>]
  def all
    <%= class_name %>.all
  end

  # @param attrs [Hash]
  # @return [<%= class_name %>]
  def create(attrs)
    <%= class_name %>.create(attrs)
  end

  # @param id [Integer]
  # @param attrs [Hash]
  # @return [<%= class_name %>, nil]
  def update(id, attrs)
    record = <%= class_name %>.find_by(id: id)
    record.update(attrs) if record
    record
  end

  # @param id [Integer]
  # @return [<%= class_name %>, nil]
  def delete(id)
    record = <%= class_name %>.find_by(id: id)
    record&.destroy
  end
end
