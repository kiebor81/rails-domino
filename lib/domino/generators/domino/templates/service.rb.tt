# Service for business logic around <%= class_name %>.
#
# Handles use-case orchestration and business operations.
#
# @example
#   service = <%= class_name %>Service.new(...)
#   service.get(1)
#
class <%= class_name %>Service < BaseService
  include Import['<%= file_name %>_repository']

  # @param <%= file_name %>_repository [<%= class_name %>Repository]
  def initialize(<%= file_name %>_repository:)
    @<%= file_name %>_repository = <%= file_name %>_repository
  end

  # @param id [Integer]
  # @return [<%= class_name %>, nil]
  def get(id)
    @<%= file_name %>_repository.find_by_id(id)
  end

  # @param attrs [Hash]
  # @return [<%= class_name %>]
  def create(attrs)
    @<%= file_name %>_repository.create(attrs)
  end

  # @param id [Integer]
  # @param attrs [Hash]
  # @return [<%= class_name %>, nil]
  def update(id, attrs)
    @<%= file_name %>_repository.update(id, attrs)
  end

  # @param id [Integer]
  # @return [Boolean]
  def delete(id)
    !!@<%= file_name %>_repository.delete(id)
  end

  # @return [Array<<%= class_name %>>]
  def all
    @<%= file_name %>_repository.all
  end
end
